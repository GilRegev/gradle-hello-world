name: Simple CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on push to main branch
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      # Step 3: Increment Version
      - name: Increment Version
        run: |
          VERSION=$(grep 'version =' build.gradle.kts | awk -F\" '{print $2}')
          PATCH=$(echo $VERSION | awk -F. '{print $3+1}')
          NEW_VERSION=$(echo $VERSION | awk -F. '{print $1"."$2".'$PATCH'"}')
          sed -i "s/version = \"$VERSION\"/version = \"$NEW_VERSION\"/" build.gradle.kts
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Step 4: Build with Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Step 5: Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: build/libs/*.jar

      - name: Debug Secrets and Version
        run: |
          echo "DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'"
          echo "VERSION: '${{ env.VERSION }}'"



  docker:
    runs-on: ubuntu-latest
    needs: build
    env:
      DOCKER_USERNAME: "gilr7" 
      DOCKER_IMAGE_NAME: "my-app"
      VERSION: "1.0.1"


    steps:
      # Step 6: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 8: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build --progress=plain -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$VERSION -f ./Dockerfile .
          docker tag $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$VERSION $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:latest

      # Step 9: Push Docker Image
      - name: Push Docker Image
        run: |
          docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$VERSION
          docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:latest
